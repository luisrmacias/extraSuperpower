balanced = TRUE))
mean_mat
library(CensMFM)
?rMSN
rMSN(10, mean_mat$matrices_obj$mean.mat, mean_mat$matrices_obj$sigmat, c(-3, 2))
rMSN(10, as.vector(mean_mat$matrices_obj$mean.mat), mean_mat$matrices_obj$sigmat, c(-3, 2))
rMSN(10, as.vector(t(mean_mat$matrices_obj$mean.mat)), mean_mat$matrices_obj$sigmat, c(-3, 2))
faeff <- 0.5
fA <- 2
fbeff <- 10
fB <- 2
rho <- 0.9
fwithin <- "fA"
mean_mat <- calculate_mean_matrix(refmean = 10, nlfA = fA, nlfB = fB,
fAeffect = faeff, fBeffect = fbeff,
rho = rho, withinf = fwithin)
mean_mat$matrices_obj$mean.mat
mean_mat$matrices_obj$sigmat
rMSN(10, as.vector(t(mean_mat$matrices_obj$mean.mat)), mean_mat$matrices_obj$sigmat, c(-3, 2, -3, 2))
test <- rMSN(10, as.vector(t(mean_mat$matrices_obj$mean.mat)), mean_mat$matrices_obj$sigmat, c(-3, 2, -3, 2))
test
hist(test[,1])
hist(test[,2])
test <- rMSN(60, as.vector(t(mean_mat$matrices_obj$mean.mat)), mean_mat$matrices_obj$sigmat, c(-3, 2, -3, 2))
hist(test[,1])
hist(test[,2])
hist(test[,3])
hist(test[,4])
hist(test[,5])
set.seed(24576)
test <- rMSN(60, as.vector(t(mean_mat$matrices_obj$mean.mat)), mean_mat$matrices_obj$sigmat, c(-3, 2, -3, 2))
test
hist(test[,1])
hist(test[,2])
hist(test[,3])
hist(test[,4])
set.seed(24576)
test <- rMSN(60, as.vector(t(mean_mat$matrices_obj$mean.mat)), mean_mat$matrices_obj$sigmat, c(-3, 0, -3, 0))
hist(test[,1])
hist(test[,2])
hist(test[,3])
hist(test[,4])
hist(test[,2])
faeff <- 2
fA <- 2
fbeff <- 2
fB <- 2
rho <- 0.9
fwithin <- "fA"
mean_mat <- calculate_mean_matrix(refmean = 10, nlfA = fA, nlfB = fB,
fAeffect = faeff, fBeffect = fbeff,
rho = rho, withinf = fwithin)
mean_mat$matrices_obj$sigmat
mean_mat$matrices_obj$mean.mat
test <- rMSN(60, as.vector(t(mean_mat$matrices_obj$mean.mat)), mean_mat$matrices_obj$sigmat, c(5, 0, -5, 0))
hist(test[,2])
hist(test[,1])
hist(test[,3])
hist(test[,4])
hist(test[,1])
hist(test[,2])
hist(test[,3])
hist(test[,4])
hist(test[,1])
hist(test[,3])
test
rMMSN.contour(model = NULL, y=test)
rMMSN.contour(model = NULL, y=test, mu = mean_mat$matrices_obj$mean.mat, Sigma = mean_mat$matrices_obj$sigmat, shape = c(5, 0, -5, 0))
rMMSN.contour(model = NULL, y=test, mu = mean_mat$matrices_obj$mean.mat, Sigma = mean_mat$matrices_obj$sigmat, shape = c(5, 0, -5, 0), pii=rep(0.25,4))
test <- rMSN(60, mean_mat$matrices_obj$mean.mat), mean_mat$matrices_obj$sigmat, c(5, 0, -5, 0))
test <- rMSN(60, mean_mat$matrices_obj$mean.mat, mean_mat$matrices_obj$sigmat, c(5, 0, -5, 0))
test <- rMSN(60, as.vector(mean_mat$matrices_obj$mean.mat), mean_mat$matrices_obj$sigmat, c(5, 0, -5, 0))
test
hist(test[,1])
hist(test[,2])
hist(test[,3])
hist(test[,4])
test <- rMSN(200, as.vector(mean_mat$matrices_obj$mean.mat), mean_mat$matrices_obj$sigmat, c(5, 0, -5, 0))
hist(test[,1])
hist(test[,2])
hist(test[,3])
hist(test[,4])
mean_mat$matrices_obj$sd.mat
hist(test[,1])
hist(test[,2])
hist(test[,3])
hist(test[,4])
test <- rMSN(200, as.vector(mean_mat$matrices_obj$mean.mat), mean_mat$matrices_obj$sigmat, rep(5, ncol(mean_mat$matrices_obj$mean.mat)))
test <- rMSN(200, as.vector(mean_mat$matrices_obj$mean.mat), mean_mat$matrices_obj$sigmat, rep(5, nrow(mean_mat$matrices_obj$mean.mat)))
mean_mat$matrices_obj$mean.mat
test <- rMSN(200, as.vector(mean_mat$matrices_obj$mean.mat), mean_mat$matrices_obj$sigmat, rep(5, prod(fA. fB)))
test <- rMSN(200, as.vector(mean_mat$matrices_obj$mean.mat), mean_mat$matrices_obj$sigmat, rep(5, prod(fA. fB))
test <- rMSN(200, as.vector(mean_mat$matrices_obj$mean.mat), mean_mat$matrices_obj$sigmat, rep(5, prod(fA. fB)))
test <- rMSN(200, as.vector(mean_mat$matrices_obj$mean.mat), mean_mat$matrices_obj$sigmat, rep(5, prod(fA. fB))))
test <- rMSN(200, as.vector(mean_mat$matrices_obj$mean.mat), mean_mat$matrices_obj$sigmat, c(5,5,5,5))
test <- rMSN(200, as.vector(mean_mat$matrices_obj$mean.mat), mean_mat$matrices_obj$sigmat, rep(5,prod(fA, fB)))
test
cor.test(test[,1], test[,2])
plot(test[,1], test[,2])
plot(test[,1], test[,3])
plot(test[,1], test[,4])
cor.test(test[,1], test[,4])
plot(test[,2], test[,3])
plot(test[,2], test[,4])
cor.test(test[,2], test[,4])
devtools::load_all()
faeff <- 1
fA <- 2
fbeff <- 3
fB <- 4
group_size <- 5
rho <- 0.75
fwithin <- "fB"
mean_mat <- calculate_mean_matrix(refmean = 10, nlfA = fA, nlfB = fB,
fAeffect = faeff, fBeffect = fbeff)
expect_error(twoway_simulation_correlated(group_size = group_size, mean_mat, nsims = 3))
twoway_simulation_correlated(group_size = group_size, mean_mat, nsims = 3)
mean_mat <- calculate_mean_matrix(refmean = 10, nlfA = fA, nlfB = fB,
fAeffect = faeff, fBeffect = fbeff,
rho = rho, withinf = fwithin)
twoway_simulation_correlated(group_size = group_size, mean_mat, nsims = 3)
faeff <- 1
fA <- 2
fbeff <- 3
fB <- 4
rho <- 0.75
fwithin <- "fB"
mean_mat <- calculate_mean_matrix(refmean = 10, nlfA = fA, nlfB = fB,
fAeffect = faeff, fBeffect = fbeff,
rho = rho, withinf = fwithin)
group_size <- 5.4
twoway_simulation_correlated(group_size = group_size, mean_mat, nsims = 3,
balanced = TRUE)
group_size <- 10
twoway_simulation_correlated(group_size = group_size, mean_mat, nsims = 3,
balanced = FALSE)
group_size <- c(5, 6)
twoway_simulation_independent(group_size = group_size, mean_mat, nsims = 3,
balanced = TRUE)
faeff <- 2
fA <- 2
fbeff <- 2
fB <- 2
rho <- 0.9
fwithin <- "fA"
mean_mat <- calculate_mean_matrix(refmean = 10, nlfA = fA, nlfB = fB,
fAeffect = faeff, fBeffect = fbeff,
rho = rho, withinf = fwithin)
group_size <- 100
set.seed(15440804)
sim <- twoway_simulation_correlated(group_size = group_size, mean_mat, nsims = 1)$simulated_data
fBcor1 <- cor.test(sim$y[sim$cond=="A_a"], sim$y[sim$cond=="A_b"])$estimate
abs(fBcor1)
0.2
fBcor2 <- cor.test(sim$y[sim$cond=="B_a"], sim$y[sim$cond=="B_b"])$estimate
abs(fBcor2)
fAcor1 <- cor.test(sim$y[sim$cond=="A_a"], sim$y[sim$cond=="B_a"])$estimate
abs(fAcor1)
rho-0.1
fAcor2 <- cor.test(sim$y[sim$cond=="A_b"], sim$y[sim$cond=="B_b"])$estimate
abs(fAcor2)
faeff <- 10
fA <- 2
fbeff <- 0.5
fB <- 2
rho <- 0.9
fwithin <- "fB"
mean_mat <- calculate_mean_matrix(refmean = 10, nlfA = fA, nlfB = fB,
fAeffect = faeff, fBeffect = fbeff,
rho = rho, withinf = fwithin)
group_size <- 100
set.seed(15440804)
sim <- twoway_simulation_correlated(group_size = group_size, mean_mat, nsims = 1)$simulated_data
fBcor1 <- cor.test(sim$y[sim$cond=="A_a"], sim$y[sim$cond=="A_b"])$estimate
abs(fBcor1)
fBcor2 <- cor.test(sim$y[sim$cond=="B_a"], sim$y[sim$cond=="B_b"])$estimate
abs(fBcor2)
fAcor1 <- cor.test(sim$y[sim$cond=="A_a"], sim$y[sim$cond=="B_a"])$estimate
abs(fAcor1)
fAcor2 <- cor.test(sim$y[sim$cond=="A_b"], sim$y[sim$cond=="B_b"])$estimate
abs(fAcor2)
nlevfA <- 2
nlevfB <- 2
label_list <- list(groups=LETTERS[1:nlevfA], treatment=letters[1:nlevfB])
group_size <- 100
iterations <- 1
rho <- -0.9
fwithin <- "fB"
refs <- calculate_mean_matrix(refmean = 1, nlfA = nlevfA, nlfB = nlevfB,
fAeffect = 5, fBeffect = 0.2, plot = FALSE,
sdratio = 0.1, sdproportional = FALSE,
rho = rho, withinf = fwithin,
label_list = label_list)
set.seed(160724)
simdat <- twoway_simulation_correlated(group_size = group_size, matrices_obj = refs, nsims = iterations)$simulated_data
distest <- tapply(simdat$y, simdat$cond, shapiro.test)
sapply(distest, "[", "p.value")>0.05
all(sapply(distest, "[", "p.value")>0.05)
nlevfA <- 3
nlevfB <- 6
refs <- calculate_mean_matrix(refmean = 1, nlfA = nlevfA, nlfB = nlevfB,
fAeffect = 5, fBeffect = 0.2, plot = FALSE, sdratio = 0.1, sdproportional = FALSE,
groupswinteraction = matrix(c(2,2,3,3,1,4,2,5,3,6), 5, 2, byrow = TRUE), interact = 50,
label_list = list(groups=LETTERS[1:nlevfA], treatment=letters[1:nlevfB]),
rho = rho, withinf = fwithin)
refs$sigmat <- Matrix::nearPD(refs$sigmat)$mat
simdat <- twoway_simulation_correlated(group_size = group_size, matrices_obj = refs, nsims = iterations)$simulated_data
distest <- tapply(simdat$y, simdat$cond, shapiro.test)
pvals <- unlist(sapply(distest, "[", "p.value"))
p.adjust(pvals)>0.05
refs <- calculate_mean_matrix(refmean = 1, nlfA = nlevfA, nlfB = nlevfB,
fAeffect = 5, fBeffect = 0.2, plot = FALSE, sdratio = 0.1, sdproportional = FALSE,
groupswinteraction = matrix(c(2,2,3,3,1,4,2,5,3,6), 5, 2, byrow = TRUE), interact = 50,
label_list = list(groups=LETTERS[1:nlevfA], treatment=letters[1:nlevfB]),
rho = rho, withinf = fwithin)
#refs$sigmat <- Matrix::nearPD(refs$sigmat)$mat
simdat <- twoway_simulation_correlated(group_size = group_size, matrices_obj = refs, nsims = iterations)$simulated_data
nlevfA <- 2
nlevfB <- 4
group_size <- 100
iterations <- 1
suplim <- 12
rho <- 0.8
fwithin <- "both"
matlist <- calculate_mean_matrix(refmean = 10, nlfA = nlevfA, nlfB = nlevfB,
fAeffect = 2, fBeffect = 2, plot = FALSE, sdratio = 0.3,
label_list = list(groups=LETTERS[1:nlevfA], treatment=letters[1:nlevfB]),
rho = rho, withinf = fwithin)
twoway_simulation_correlated(group_size = group_size, matrices_obj = matlist, nsims = iterations,
distribution = "skewed", superior_limit = suplim)
twoway_simulation_correlated(group_size = group_size, matrices_obj = matlist, nsims = iterations,
distribution = "truncated.normal", shape.parameter = 2)
twoway_simulation_correlated(group_size = group_size, matrices_obj = matlist, nsims = iterations,
distribution = "truncated.normal", shape = 2)
# test_that("simulated values are skewed", {
#   nlevfA <- 2
#   nlevfB <- 4
#   label_list <- list(groups=LETTERS[1:nlevfA], treatment=letters[1:nlevfB])
#   group_size <- 100
#   iterations <- 1
#   rho <- 0.6
#   fwithin <- "fB"
#   refs <- calculate_mean_matrix(refmean = 10, nlfA = nlevfA, nlfB = nlevfB,
#                                    fAeffect = 2, fBeffect = 0.5, plot = FALSE,
#                                    label_list = label_list, rho = rho, withinf = fwithin)
#   set.seed(160724)
#   simdat <- twoway_simulation_correlated(group_size = group_size, matrices_obj = refs,
#                                          nsims = iterations,
#                                          distribution = "skewed", shape.parameter = 0.1)$simulated_data
#   nsubabmean <- min(tapply(simdat$y, simdat$cond, function(x)sum(x>mean(x))))
#   expect_gte(nsubabmean, group_size/2)
#
#   nlevfA <- 3
#   nlevfB <- 6
#   group_size <- 200
#   matlist <- calculate_mean_matrix(refmean = 1, nlfA = nlevfA, nlfB = nlevfB,
#                                    fAeffect = 5, fBeffect = 0.2, plot = FALSE, sdratio = 0.1, sdproportional = FALSE)
#   simdat <- twoway_simulation_independent(group_size = group_size, matrices_obj = matlist,
#                                           distribution = "skewed", skewness = 0.1, nsims = iterations)
#   distpvals <- ks.test(simdat$y[simdat$cond=="V1"], "pnorm", matlist$mean.mat[1,1], matlist$sd.mat)$p.value
#   distpvals <- c(distpvals, ks.test(simdat$y[simdat$cond=="V6"], "pnorm", matlist$mean.mat[1,6], matlist$sd.mat)$p.value)
#   distpvals <- c(distpvals, ks.test(simdat$y[simdat$cond=="V7"], "pnorm", matlist$mean.mat[2,1], matlist$sd.mat)$p.value)
#   distpvals <- c(distpvals, ks.test(simdat$y[simdat$cond=="V12"], "pnorm", matlist$mean.mat[2,6], matlist$sd.mat)$p.value)
#   distpvals <- c(distpvals, ks.test(simdat$y[simdat$cond=="V13"], "pnorm", matlist$mean.mat[3,1], matlist$sd.mat)$p.value)
#   distpvals <- c(distpvals, ks.test(simdat$y[simdat$cond=="V18"], "pnorm", matlist$mean.mat[3,6], matlist$sd.mat)$p.value)
#   expect_true(all(distpvals<0.07))
# })
nlevfA <- 2
nlevfB <- 4
label_list <- list(groups=LETTERS[1:nlevfA], treatment=letters[1:nlevfB])
group_size <- 100
iterations <- 1
rho <- 0.6
fwithin <- "fB"
refs <- calculate_mean_matrix(refmean = 10, nlfA = nlevfA, nlfB = nlevfB,
fAeffect = 2, fBeffect = 0.5, plot = FALSE,
label_list = label_list, rho = rho, withinf = fwithin)
refs
simdat <- twoway_simulation_correlated(group_size = group_size, matrices_obj = refs,
nsims = iterations,
distribution = "skewed", shape = 5)$simulated_data
tapply(simdat$y, simdat$cond, function(x)sum(x>mean(x)))
hist(simdat$y[simdat$cond=="A_a"])
hist(simdat$y[simdat$cond=="A_b"])
hist(simdat$y[simdat$cond=="A_c"])
hist(simdat$y[simdat$cond=="A_d"])
hist(simdat$y[simdat$cond=="B_a"])
hist(simdat$y[simdat$cond=="B_b"])
hist(simdat$y[simdat$cond=="B_c"])
hist(simdat$y[simdat$cond=="B_d"])
table(simdat$cond)
simdat <- twoway_simulation_correlated(group_size = group_size, matrices_obj = refs,
nsims = iterations,
distribution = "skewed", shape = c(5, -5))$simulated_data
devtools::load_all()
simdat <- twoway_simulation_correlated(group_size = group_size, matrices_obj = refs,
nsims = iterations,
distribution = "skewed", shape = c(5, -5))$simulated_data
hist(simdat$y[simdat$cond=="A_a"])
hist(simdat$y[simdat$cond=="A_b"])
hist(simdat$y[simdat$cond=="A_c"])
hist(simdat$y[simdat$cond=="A_d"])
hist(simdat$y[simdat$cond=="B_a"])
hist(simdat$y[simdat$cond=="B_b"])
hist(simdat$y[simdat$cond=="B_c"])
hist(simdat$y[simdat$cond=="B_d"])
fwithin
cor.test(simdat$y[simdat$cond=="A_a"], simdat$y[simdat$cond=="B_a"])
plot(simdat$y[simdat$cond=="A_a"], simdat$y[simdat$cond=="B_a"])
rho
plot(simdat$y[simdat$cond=="A_a"], simdat$y[simdat$cond=="A_b"])
cor.test(simdat$y[simdat$cond=="A_a"], simdat$y[simdat$cond=="A_b"])
cor.test(simdat$y[simdat$cond=="A_a"], simdat$y[simdat$cond=="A_c"])
cor.test(simdat$y[simdat$cond=="A_a"], simdat$y[simdat$cond=="A_d"])
cor.test(simdat$y[simdat$cond=="B_d"], simdat$y[simdat$cond=="A_d"])
sapply(simdat$y, simdat$cond, mean)
tapply(simdat$y, simdat$cond, mean)
refs$mean.mat
matrix(tapply(simdat$y, simdat$cond, mean), 2, 4)
matrix(tapply(simdat$y, simdat$cond, mean), 2, 4, byrow = TRUE)
refs$mean.mat
devtools::document()
devtools::document()
nlevfA <- 2
nlevfB <- 4
label_list <- list(groups=LETTERS[1:nlevfA], treatment=letters[1:nlevfB])
group_size <- 100
iterations <- 1
matlist <- calculate_mean_matrix(refmean = 10, nlfA = nlevfA, nlfB = nlevfB,
fAeffect = 2, fBeffect = 0.5, plot = FALSE,
label_list = label_list)
set.seed(160724)
simdat <- twoway_simulation_independent(group_size = group_size, matrices_obj = matlist,
nsims = iterations, distribution = "skewed", skewness = 0.01)
hist(simdat$y, simdat$cond=="A_a")
hist(simdat$y[simdat$cond=="A_a"])
simdat <- twoway_simulation_independent(group_size = group_size, matrices_obj = matlist,
nsims = iterations, distribution = "skewed", skewness = 0.01)$simulated_data
hist(simdat$y[simdat$cond=="A_a"])
simdat <- twoway_simulation_independent(group_size = group_size, matrices_obj = matlist,
nsims = iterations, distribution = "skewed", skewness = 5)$simulated_data
simdat
simdat <- twoway_simulation_independent(group_size = group_size, matrices_obj = matlist,
nsims = iterations, distribution = "skewed", shape = 5)$simulated_data
test_that("skewed and truncated input checks work", {
nlevfA <- 2
nlevfB <- 4
group_size <- 100
iterations <- 1
suplim <- 12
rho <- 0.8
fwithin <- "both"
matlist <- calculate_mean_matrix(refmean = 10, nlfA = nlevfA, nlfB = nlevfB,
fAeffect = 2, fBeffect = 2, plot = FALSE, sdratio = 0.3,
label_list = list(groups=LETTERS[1:nlevfA], treatment=letters[1:nlevfB]),
rho = rho, withinf = fwithin)
expect_warning(twoway_simulation_correlated(group_size = group_size, matrices_obj = matlist, nsims = iterations,
distribution = "skewed", superior_limit = suplim))
expect_warning(twoway_simulation_correlated(group_size = group_size, matrices_obj = matlist, nsims = iterations,
distribution = "truncated.normal", shape = 2))
})
nlevfA <- 2
nlevfB <- 4
label_list <- list(groups=LETTERS[1:nlevfA], treatment=letters[1:nlevfB])
group_size <- 100
iterations <- 1
rho <- 0.6
fwithin <- "fB"
refs <- calculate_mean_matrix(refmean = 10, nlfA = nlevfA, nlfB = nlevfB,
fAeffect = 2, fBeffect = 0.5, plot = FALSE,
label_list = label_list, rho = rho, withinf = fwithin)
set.seed(160724)
simdat <- twoway_simulation_correlated(group_size = group_size, matrices_obj = refs,
nsims = iterations,
distribution = "skewed", shape = 5)$simulated_data
simdat$y[simdat$cond=="A_a"]
hist(simdat$y[simdat$cond=="A_a"])
hist(simdat$y[simdat$cond=="A_b"])
hist(simdat$y[simdat$cond=="A_c"])
hist(simdat$y[simdat$cond=="A_d"])
tapply(simdat$y, simdat$cond, mean)
tapply(simdat$y, simdat$cond, median)
set.seed(160724)
simdat <- twoway_simulation_correlated(group_size = group_size, matrices_obj = refs,
nsims = iterations,
distribution = "skewed", shape = 10)$simulated_data
tapply(simdat$y, simdat$cond, mean)
tapply(simdat$y, simdat$cond, median)
tapply(simdat$y, simdat$cond, function(x)sum(x>mean(x)))
group_size
tapply(simdat$y, simdat$cond, function(x)sum(x<mean(x)))
set.seed(160724)
simdat <- twoway_simulation_correlated(group_size = group_size, matrices_obj = refs,
nsims = iterations,
distribution = "skewed", shape = 50)$simulated_data
hist(simdat$y[simdat$cond=="A_d"])
hist(simdat$y[simdat$cond=="B_d"])
hist(simdat$y[simdat$cond=="A_a"])
hist(simdat$y[simdat$cond=="A_b"])
hist(simdat$y[simdat$cond=="A_c"])
hist(simdat$y[simdat$cond=="A_d"])
hist(simdat$y[simdat$cond=="A_c"])
set.seed(160724)
simdat <- twoway_simulation_correlated(group_size = group_size, matrices_obj = refs,
nsims = iterations,
distribution = "skewed", shape = 200)$simulated_data
hist(simdat$y[simdat$cond=="A_a"])
hist(simdat$y[simdat$cond=="A_b"])
hist(simdat$y[simdat$cond=="A_c"])
hist(simdat$y[simdat$cond=="A_d"])
hist(simdat$y[simdat$cond=="B_a"])
hist(simdat$y[simdat$cond=="B_b"])
hist(simdat$y[simdat$cond=="B_c"])
hist(simdat$y[simdat$cond=="B_d"])
set.seed(160724)
simdat <- twoway_simulation_correlated(group_size = group_size, matrices_obj = refs,
nsims = iterations,
distribution = "skewed", shape = 50)$simulated_data
hist(simdat$y[simdat$cond=="A_a"])
hist(simdat$y[simdat$cond=="A_b"])
hist(simdat$y[simdat$cond=="A_c"])
hist(simdat$y[simdat$cond=="A_d"])
hist(simdat$y[simdat$cond=="A_a"])
density(simdat$y[simdat$cond=="A_a"])
plot(density(simdat$y[simdat$cond=="A_a"]))
density(rnorm(100, mean = refs$mean.mat[1,1]))
density(rnorm(100, mean = refs$mean.mat[1,1], sd = refs$sd.mat[1,1]))
plot(density(rnorm(100, mean = refs$mean.mat[1,1], sd = refs$sd.mat[1,1]))9
plot(density(rnorm(100, mean = refs$mean.mat[1,1], sd = refs$sd.mat[1,1])))
plot(density(simdat$y[simdat$cond=="A_a"]))
plot(density(simdat$y[simdat$cond=="A_b"]))
plot(density(simdat$y[simdat$cond=="A_c"]))
density(simdat$y[simdat$cond=="A_c"])
density(simdat$y[simdat$cond=="A_d"])
hist(simdat$y[simdat$cond=="A_d"])
hist(rnorm(100, mean = refs$mean.mat[1,4], sd = refs$sd.mat[1,4]))
hist(simdat$y[simdat$cond=="A_d"])
hist(rnorm(100, mean = refs$mean.mat[1,4], sd = refs$sd.mat[1,4]))
rho <- 0.9
fwithin <- "fB"
refs <- calculate_mean_matrix(refmean = 10, nlfA = nlevfA, nlfB = nlevfB,
fAeffect = 2, fBeffect = 0.5, plot = FALSE,
label_list = label_list, rho = rho, withinf = fwithin)
set.seed(160724)
simdat <- twoway_simulation_correlated(group_size = group_size, matrices_obj = refs,
nsims = iterations,
distribution = "skewed", shape = 50)$simulated_data
hist(simdat$y[simdat$cond=="A_d"])
hist(rnorm(100, mean = refs$mean.mat[1,4], sd = refs$sd.mat[1,4]))
refs$sd.mat
refs$mean.mat
rho <- 0.8
fwithin <- "fB"
refs <- calculate_mean_matrix(refmean = 10, nlfA = nlevfA, nlfB = nlevfB,
fAeffect = 2, fBeffect = 0.5, plot = FALSE,
sdproportional = FALSE, sdratio = 0.1,
label_list = label_list, rho = rho, withinf = fwithin)
set.seed(160724)
simdat <- twoway_simulation_correlated(group_size = group_size, matrices_obj = refs,
nsims = iterations,
distribution = "skewed", shape = 50)$simulated_data
hist(simdat$y[simdat$cond=="A_d"])
hist(rnorm(100, mean = refs$mean.mat[1,4], sd = refs$sd.mat))
hist(simdat$y[simdat$cond=="A_d"])
set.seed(160724)
simdat <- twoway_simulation_correlated(group_size = group_size, matrices_obj = refs,
nsims = iterations,
distribution = "skewed", shape = 3)$simulated_data
hist(simdat$y[simdat$cond=="A_d"])
test <- rMSN(10, mu=c(-3,-4), Sigma = matrix(c(3,1,1,4.5), nrow = 2, ncol = 2), shape = c(-3,2))
hist(test[,1])
hist(test[,2])
rm(test)
refs$mean.mat
set.seed(160724)
simdat <- twoway_simulation_correlated(group_size = group_size, matrices_obj = refs,
nsims = iterations,
distribution = "skewed", shape = 8)$simulated_data
hist(simdat$y[simdat$cond=="A_d"])
hist(simdat$y[simdat$cond=="B_c"])
test <- rMSN(10, mu=c(-3,-4), Sigma = matrix(c(3,1,1,4.5), nrow = 2, ncol = 2), shape = c(-3,-3))
hist(test[,1])
hist(test[,2])
test <- rMSN(10, mu=c(-3,-4), Sigma = matrix(c(3,1,1,4.5), nrow = 2, ncol = 2), shape = c(-3,5))
hist(test[,1])
hist(test[,2])
test <- rMSN(10, mu=c(-3,-4), Sigma = matrix(c(3,1,1,4.5), nrow = 2, ncol = 2), shape = c(-3,5))
hist(test[,1])
hist(test[,2])
test <- rMSN(10, mu=c(-3,-4), Sigma = matrix(c(3,1,1,4.5), nrow = 2, ncol = 2), shape = c(-3,-3))
hist(test[,1])
hist(test[,2])
test <- rMSN(70, mu=c(-3,-4), Sigma = matrix(c(3,1,1,4.5), nrow = 2, ncol = 2), shape = c(-3,-3))
hist(test[,1])
hist(test[,2])
density(test[,2])
test2 <- MASS::mvrnorm(70, mu=c(-3,-4), Sigma = matrix(c(3,1,1,4.5), nrow = 2, ncol = 2))
test2
density(test2[,2])
density(test2[,2])
plot(density(test2[,2])9
plot(density(test2[,2]))
hist(test2[,2])
hist(test2[,1])
plot(density(test2[,1]))
density(test2[,1])
detach("package:extraSuperpower", unload = TRUE)
eSpcovr <- covr::package_coverage()
eSpcovr <- covr::package_coverage()
report(eSpcovr)
covr::report(eSpcovr)
q()
