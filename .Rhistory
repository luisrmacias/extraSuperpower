strsplit2(LC.mm$Study_group, "_")[,4]
strsplit2(LC.mm$Study_group, "_")
strsplit2(LC.mm$Study_group, " ")[,4]
LC.mm$dose <- strsplit2(LC.mm$Study_group, " ")[,4]
grepl("^kinetic|^$", LC.mm$dose)
LC.mm$dose[grepl("^kinetic|^$", LC.mm$dose)]
LC.mm$dose[grepl("^kinetic|^$", LC.mm$dose)] <- NA
LC.mm$dose
class(LC.mm$dose)
factor(LC.mm$dose)
factor(LC.mm$dose, levels=c("VEH", "10", "30"))
LC.mm$dose <- factor(LC.mm$dose, levels=c("VEH", "10", "30"))
class(LC.mm$unit)
factor(LC.mm$unit)
LC.mm$unit <- factor(LC.mm$unit)
res.pca = calculate_mds_pca(se = LC.mm[,LC.mm$experiment=="Kinetic"], assay="log2ms",
method = "pca")
plot_mds_pca_2d(res = res.pca,
se = LC.mm[,LC.mm$experiment=="Kinetic"],
var.color = "unit",
var.shape= "time")$plot
res <- check_batch_effects(se=LC.mm[,LC.mm$experiment=="Kinetic"], res.pca = res.pca, col.test = c("time", "unit"))
print(res$plot)
res.pca = calculate_mds_pca(se = LC.mm[,LC.mm$experiment=="BTKi"], assay="log2ms",
method = "pca")
plot_mds_pca_2d(res = res.pca,
se = LC.mm[,LC.mm$experiment=="BTKi"],
var.color = "dose")$plot
res <- check_batch_effects(se=LC.mm[,LC.mm$experiment=="BTKi"], res.pca = res.pca, col.test = "dose")
print(res$plot)
res.pca = calculate_mds_pca(se = LC.mm, assay="log2ms",
method = "pca")
plot_mds_pca_2d(res = res.pca,
se = LC.mm,
var.color = "experiment",
var.shape = "exposure")$plot
res <- check_batch_effects(se=LC.mm, res.pca = res.pca, col.test = c("Study_group", "experiment", "time", "disease", "exposure"))
print(res$plot)
str(toplotmetabs)
head(rowData(LC.mm))
p3 <- plotBox(LC.mm[rowData(LC.mm)[,1]=="1",], i = "log2ms", group = LC.mm$Study_group) + theme(legend.position="none")
p4 <- plotBox(LC.mm[rowData(LC.mm)[,1]=="2a",], i = "log2ms", group = LC.mm$Study_group) + theme(legend.position="none")
p5 <- plotBox(LC.mm[rowData(LC.mm)[,1]=="2b",], i = "log2ms", group = LC.mm$Study_group)
p3 + p4 + p5 + plot_annotation(title="Normalized data by compond certitude group")
dupli$info
head(colData(LC.mm))
save(LC.mm, file = "../proc/mm_metabolome_QC.RData")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = this.path::this.dir())
library(SummarizedExperiment)
library(DESeq2)
library(htmlTable)
library(data.table)
source("../../03_differentialexpression/R_functions/html_functions.R")
load("../proc/mm_metabolome_QC.RData")
table(LC.mm$experiment)
atop <- LC.mm[,LC.mm$experiment=="Atopicder"]
atop
atop$exposure
atop$ID_visit
atop$Study_group
class(atop$Study_group)
grep("2-DG", atop$Study_group)
grep("2-DG", atop$Study_group, value = TRUE)
grepl("2-DG", atop$Study_group)
factor(grepl("2-DG", atop$Study_group), labels = c("absent", "present")
)
factor(grepl("2-DG", atop$Study_group), labels = c("absent", "present"))
factor(grepl("2-DG", atop$Study_group), labels = c("none", "2-DG"))
atop$med1 <- factor(grepl("2-DG", atop$Study_group), labels = c("none", "2-DG"))
atop$Study_group
atop$med2 <- factor(grepl("Oligomycin", atop$Study_group), labels = c("none", "Oligomycin"))
table(atop$med1, atop$med2)
dds <- DESeqDataSetFromMatrix(countData=round(assay(atop)), colData=colData(atop), rowData=rowData(atop), design = ~med1 + med2)
library(edgeR)
design <- cbind(Intercept=1, twoDG=as.numeric(atop$med1), olig=as.numeric(atop$med2))
head(design)
design[,2:3]-1
design[,2:3] <- design[,2:3]-1
fit <- lmFit(assay(atop, 2), design)
fit <- eBayes(fit)
head(fit)
volcanoData <- cbind(fit$coefficients[,2], -log10(p.adjust(fit$p.value[,2], "fdr")))
colnames(volcanoData) <- c("logFC", "negLogPfdr")
volcanoData <- data.frame(volcanoData)
volcanoData$met <- rownames(volcanoData)
head(volcanoData)
head(fit$p.value)
head(volcanoData)
volcanoData[order(volcanoData$negLogPfdr),]
head(volcanoData[order(volcanoData$negLogPfdr),])
head(volcanoData[order(volcanoData$negLogPfdr),], 10)
head(volcanoData[order(volcanoData$negLogPfdr),], 15)
head(volcanoData[order(volcanoData$negLogPfdr),], 20)
head(volcanoData[order(volcanoData$negLogPfdr),], 30)
plot(volcanoData$logFC, volcanoData$negLogPfdr, pch=20, ylim=c(0, 14.5), xlab="logFC", ylab="-log10pFDR")
plot(volcanoData$logFC, volcanoData$negLogPfdr, pch=20, ylim=c(0, 2), xlab="logFC", ylab="-log10pFDR")
p.adjust(fit$p.value[,2], "fdr")
order(p.adjust(fit$p.value[,2], "fdr"))
sort(p.adjust(fit$p.value[,2], "fdr"))
head(sort(p.adjust(fit$p.value[,2], "fdr")))
-log10(0.05)
atop$med1
atop$med2
design <- model.matrix(~ 0 + atop$Study_group)
design
atop$Study_group
factor(atop$Study_group)
factor(atop$Study_group, levels = c("CTRL", "2-DG", "Oligomycin", "2-DG_Oligomycin"))
factor(atop$Study_group, levels = c("CTRL", "2-DG", "Oligomycin", "2 + DG_Oligomycin"))
factor(atop$Study_group, levels = c("CTRL", "2-DG", "Oligomycin", "2DG + Oligomycin"))
factor(atop$Study_group)
factor(atop$Study_group, levels = c("CTRL", "2-DG", "Oligomycin", "2-DG + Oligomycin"))
atop$Study_group <- factor(atop$Study_group, levels = c("CTRL", "2-DG", "Oligomycin", "2-DG + Oligomycin"))
atop$Study_group <- factor(atop$Study_group, levels = c("CTRL", "2-DG", "Oligomycin", "2-DG + Oligomycin"))
design <- model.matrix(~ 0 + atop$Study_group)
head(design)
gsub("atop$Study_group", "", names(design))
gsub("atop$Study_group", "", names(design))
names(design)
colnames(design)
gsub("atop$Study_group", "", colnames(design))
gsub("atop\\$Study_group", "", colnames(design))
colnames(design) <- gsub("atop\\$Study_group", "", colnames(design))
colnames(design)[4]
colnames(design)[4] <- twoDG_Oligomycin
colnames(design)[4] <- "twoDG_Oligomycin"
head(design)
design
interaction(atop$med1, atop$med2)
model.matrix(~ 0 + interaction(atop$med1, atop$med2))
design <- model.matrix(~ 1 + atop$med1 + atop$med2)
design
colnames(design) <- gsub("atop\\$", "", colnames(design))
head(design)
fit <- lmFit(assay(atop, 2), design)
fit <- eBayes(fit)
q()
q()
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "~/repos/omics//p22023/")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "~/repos/omics//p22023/")
library(IOBR)
q()
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = this.path::this.dir())
library(ggplot2)
##library(patchwork)
library(SummarizedExperiment)
library(UpSetR)
load("../histologia_revisada.RData")
morbidos$IID[morbidos$IID==""] <- NA
morbidos$combID <- dplyr::coalesce(morbidos$IID, morbidos$ID)
morbidos$elegibles[grepl("GEAd", morbidos$combID)] <- FALSE
morbidos$whist <- complete.cases(morbidos$HGNA_Rogelio_Joel_FN)
histology <- morbidos$combID[which(morbidos$whist & morbidos$elegibles)]
followup12mo <- morbidos$combID[which(morbidos$twelvem_fu=="yes" & morbidos$elegibles)]
followup18mo <- morbidos$combID[which(morbidos$eitghteenm_fu=="yes" & morbidos$elegibles)]
genotyping <- morbidos$combID[which(morbidos$SNP_MICROARREGLO=="yes" & morbidos$elegibles)]
rna <- morbidos$combID[which(morbidos$transcriptome=="yes" & morbidos$elegibles)]
methylation <- morbidos$combID[which(morbidos$methylation=="yes" & morbidos$elegibles)]
lipidomics <- morbidos$combID[which(morbidos$lipidomics=="yes" & morbidos$elegibles)]
metabolomics <- morbidos$combID[which(morbidos$metabolomics=="yes" & morbidos$elegibles)]
bile.acids <- morbidos$combID[morbidos$bile.acids=="yes" & morbidos$elegibles]
datatypes <- c("histology", "followup12mo", "followup18mo", "genotyping", "rna", "methylation", "lipidomics", "metabolomics", "bile.acids")
datavail <- mget(datatypes)
rm(list=datatypes)
upset(fromList(datavail[-9]), nsets = length(datavail[-9]), nintersects = 15, text.scale = 1.5, order.by = "freq", matrix.color = "darkgreen", mainbar.y.label = "Patients")
q()
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "C:/Users/macias/Documents/bioinfo/repos/p22023/")
library(SummarizedExperiment)
library(MultiAssayExperiment)
library(MultiAssayExperiment)
library(htmlTable)
library(htmlTable)
library(QCnormSE)
library(data.table)
library(data.table)
library(edgeR)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = this.path::this.dir())
library(qmtools)
library(QCnormSE)
library(qmtools)
library(QCnormSE)
library(table1)
library(edgeR)
library(ggplot2)
list.files()
load("../proc/emolungse.RData")
emolung.se$BMI <- emolung.se$Gewicht/(emolung.se$Groesse/100)^2
(.packages())
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = this.path::this.dir())
emolung.se$BMI <- emolung.se$Gewicht/(emolung.se$Groesse/100)^2
library(qmtools)
library(QCnormSE)
library(table1)
library(edgeR)
library(ggplot2)
table1( ~ Gender + AgeAtEBCCollection + diagnosis + study_site + RauchenStatus + BMI +  Stadium | visitdic, data = colData(emolung.se), caption = "Distribution of demographic and clinical variables and missingness in EmoLung")
kableExtra::kable(addmargins(table(rowData(emolung.se)[,1], factor(is.na(rowData(emolung.se)[,4]), labels = c("found", "not found"))),2), caption = "CpG site assignation according to GRCh37")
library(kableExtra)
kable(addmargins(table(rowData(emolung.se)[,1], factor(is.na(rowData(emolung.se)[,4]), labels = c("found", "not found"))),2), caption = "CpG site assignation according to GRCh37") %>% kable_styling(htmltable_class = "basic")
?kable_styling
kable(addmargins(table(rowData(emolung.se)[,1], factor(is.na(rowData(emolung.se)[,4]), labels = c("found", "not found"))),2), caption = "CpG site assignation according to GRCh37") %>% kable_styling(htmltable_class = "lightable-striped")
assayNames(emolung.se)[1] <- "raw"
assay(emolung.se, "cyclil") <- normalizeIntensity(assay(emolung.se), method="cyclicloess")
gordering <- order(emolung.se$visit)
expr <- assays(emolung.se)[[1]][,gordering]
quant <-  t(apply(expr, 2, quantile, na.rm = TRUE))
colnames(quant) <- c("min", "lower", "middle", "upper", "max")
df <- data.frame(group = rownames(quant), quant)
df$group <- factor(df$group, levels = df$group)
g <- ggplot(data = df, aes_string("group")) + geom_boxplot(aes_string(ymin = "min",
lower = "lower", middle = "middle", upper = "upper",
ymax = "max"), stat = "identity", fill = "lightgray") +
coord_flip() + labs(y = "expression value") + ggpubr::theme_pubr() +
theme(axis.title.y = element_blank(), axis.ticks.y = element_blank(),
axis.text=element_text(size=9), axis.title=element_text(size=9)) +
labs(title = "Distribution of raw methylation values")
g
expr <- assays(emolung.se)[[2]][,gordering]
quant <-  t(apply(expr, 2, quantile, na.rm = TRUE))
colnames(quant) <- c("min", "lower", "middle", "upper", "max")
df <- data.frame(group = rownames(quant), quant)
df$group <- factor(df$group, levels = df$group)
g <- ggplot(data = df, aes_string("group")) + geom_boxplot(aes_string(ymin = "min",
lower = "lower", middle = "middle", upper = "upper",
ymax = "max"), stat = "identity", fill = "lightgray") +
coord_flip() + labs(y = "expression value") + ggpubr::theme_pubr() +
theme(axis.title.y = element_blank(), axis.ticks.y = element_blank(),
axis.text=element_text(size=9), axis.title=element_text(size=9))+
labs(title = "Distribution of normalized methylation values")
g
lowcounts <- plot_distribution(se = emolung.se, assay = "cyclil",
method = "boxplot")$info$id
emolung.se <- emolung.se[,!colnames(emolung.se) %in% lowcounts]
detect_duplicated_samples(se = emolung.se,
assay = "cyclil")$plot
duplicate <- detect_duplicated_samples(se = emolung.se,
assay = "cyclil")$info
res.pca = calculate_mds_pca(se = emolung.se, assay="raw",
method = "pca")
plot_mds_pca_2d(res = res.pca,
se = emolung.se,
var.shape = "visitdic",
var.color = "diagnosis",
title = "Raw methylation proportions")$plot
res <- check_batch_effects(se=emolung.se, res.pca = res.pca, col.test = c("visit", "study_site", "diagnosis", "Gender", "AgeAtEBCCollection", "RauchenStatus", "Stadium", "BMI", "PatID"))
print(res$plot)
res.pca = calculate_mds_pca(se = emolung.se, assay="cyclil",
method = "pca")
plot_mds_pca_2d(res = res.pca,
se = emolung.se,
var.shape = "visitdic",
var.color = "diagnosis",
title = "Normalized methylation proportions")$plot
res <- check_batch_effects(se=emolung.se, res.pca = res.pca, col.test = c("visit", "study_site", "diagnosis", "Gender", "AgeAtEBCCollection", "RauchenStatus", "Stadium", "BMI", "PatID"))
print(res$plot)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = this.path::this.dir())
library(edgeR)
library(ggplot2)
library(kableExtra)
load("../proc/emolungse.RData")
emolung.se$BMI <- emolung.se$Gewicht/(emolung.se$Groesse/100)^2
names(colData(emolung.se))
emolung.se$visit
emolung.se$visitdic
design <- model.matrix( ~0 + PatID + visitdic)
design <- model.matrix( ~0 + PatID + visitdic, data=colData(emolung.se))
design
emolung.se
library(qmtools)
assay(emolung.se, "cyclil") <- normalizeIntensity(assay(emolung.se), method="cyclicloess")
emolung.se
X <- assays(emolung.se, "cyclil")
X <- assay(emolung.se, "cyclil")
blfufut <- lm.fit(X ~ design)
dim(X)
class(X)
dim(design)
X <- t(X)
blfufut <- lm.fit(X ~ design)
blfufut <- lm.fit(X, design)
rm(blfufut)
blfufit <- lm.fit(X, design)
blfufit$coefficients
head(blfufit$coefficients)
blfufit <- eBayes(blfufit)
design <- model.matrix( ~ + PatID + visitdic, data=colData(emolung.se))
X <- assay(emolung.se, "cyclil")
X <- t(X)
X <- assay(emolung.se, "cyclil")
blfufit <- lm.fit(X, design)
design <- model.matrix( ~ PatID + visitdic, data=colData(emolung.se))
X <- assay(emolung.se, "cyclil")
blfufit <- lm.fit(X, design)
design <- model.matrix( ~ emolung.se$PatID + emolung.se$visitdic)
X <- assay(emolung.se, "cyclil")
blfufit <- lm.fit(X, design)
blfufit <- lm.fit(assar(emolung.se, 2), design)
blfufit <- lm.fit(assay(emolung.se, 2), design)
design <- model.matrix( ~ emolung.se$PatID + emolung.se$visitdic)
X <- assay(emolung.se, "cyclil")
X <- t(X)
blfufit <- lm.fit(X, design)
blfufit$coefficients
dim(blfufit$coefficients)
blfufit <- eBayes(blfufit)
blfufit$effects
blfufit <- lmFit(X, design)
design <- model.matrix( ~ emolung.se$PatID + emolung.se$visitdic)
X <- assay(emolung.se, "cyclil")
blfufit <- lmFit(X, design)
blfufit <- eBayes(blfufit)
blfufit$coefficients
topTable(blfufit, coef = 21)
topTable(blfufit, coef = 21)
dim(blfufit$coefficients)
head(blfufit$coefficients[21])
head(blfufit$coefficients[,21])
blfufit$coefficients[,21]
names(blfufit$coefficients)
colnames(blfufit$coefficients)
design <- model.matrix( ~ 0 + emolung.se$PatID + emolung.se$visitdic)
X <- assay(emolung.se, "cyclil")
blfufit <- lmFit(X, design)
blfufit <- eBayes(blfufit)
topTable(blfufit, coef = 21)
topTable(blfufit, coef = 21)
names(blfufit$coefficients)
colnames(blfufit$coefficients)
design <- model.matrix( ~ 0 + emolung.se$PatID + emolung.se$visitdic)
names(design) <- gsub("emolung.se\\$", "", names(design))
names(design)
design <- model.matrix( ~ 0 + emolung.se$PatID + emolung.se$visitdic)
colnames(design) <- gsub("emolung.se\\$", "", colnames(design))
colnames(design)
X <- assay(emolung.se, "cyclil")
blfufit <- lmFit(X, design)
blfufit <- eBayes(blfufit)
topTable(blfufit, coef = "visitdicFU")
topTable(blfufit, coef = "visitdicFU")
topTable(blfufit, coef = "visitdicFU", genelist = rowData(emolung.se)[,1])
topTable(blfufit, coef = "visitdicFU", genelist = rowData(emolung.se)[,1])
(.packages())
design <- model.matrix( ~ 0 + emolung.se$PatID + emolung.se$visitdic)
colnames(design) <- gsub("emolung.se\\$", "", colnames(design))
X <- assay(emolung.se, "cyclil")
blfufit <- lmFit(X, design)
blfufit <- eBayes(blfufit)
topTable(blfufit, coef = "visitdicFU", genelist = rowData(emolung.se)[,1]) %>% kable() %>% kable_styling(latex_options = "striped")
head(rowData(emolung.se))
design <- model.matrix( ~ 0 + emolung.se$PatID + emolung.se$visitdic)
colnames(design) <- gsub("emolung.se\\$", "", colnames(design))
X <- assay(emolung.se, "cyclil")
blfufit <- lmFit(X, design)
blfufit <- eBayes(blfufit)
topTable(blfufit, coef = "visitdicFU", genelist = rowData(emolung.se)[,7]) %>% kable() %>% kable_styling(latex_options = "striped")
library(minfi)
library(minfi)
pheno <- emolung.se$visitdic
head(design)
?bumphunter
X <- X <- assay(emolung.se, "raw")
X <- assay(emolung.se, "raw")
X <- t(X)
dmrs <- minfi::bumphunter(X, design, cutoff=0.2, B=0, type="Beta")
clusterMaker(rowData(emolung.se)[,1], rowData(emolung.se)[,2])
dmrs <- bumphunter(X, design, chr=rowData(emolung.se)[,1], pos=rowData(emolung.se)[,2], cutoff=0.2, B=1000, type="Beta")
dim(X)
dim(design)
X <- assay(emolung.se, "raw")
dmrs <- bumphunter(X, design, chr=rowData(emolung.se)[,1], pos=rowData(emolung.se)[,2], cutoff=0.2, B=1000, type="Beta")
str(dmrs)
dmrs$table
head(dmrs$table)
dim(dmrs$table)
dmrs$table$fwer
order(dmrs$table$fwer)
head(dmrs$table)
head(dmrs$coef)
dim(design)
names(design)
colnames(design)
dmrs <- bumphunter(X, design, chr=rowData(emolung.se)[,1], pos=rowData(emolung.se)[,2], cutoff=0.2, B=1000, type="Beta", coef=21)
dmrs <- bumphunter(X, design, chr=rowData(emolung.se)[,1], pos=rowData(emolung.se)[,2], cutoff=0.2, B=1000, type="Beta", coef=21, nullMethod=="bootstrap")
dmrs <- bumphunter(X, design, chr=rowData(emolung.se)[,1], pos=rowData(emolung.se)[,2], cutoff=0.2, B=1000, type="Beta", coef=21, nullMethod="bootstrap")
head(dmrs$table)
source("../../p22023/01_datacensing/R_functions/html_functions.R")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = this.path::this.dir())
library(qmtools)
library(edgeR)
library(minfi)
library(htmlTable)
source("../../p22023/01_datacensing/R_functions/html_functions.R")
load("../proc/emolungse.RData")
emolung.se$BMI <- emolung.se$Gewicht/(emolung.se$Groesse/100)^2
assay(emolung.se, "cyclil") <- normalizeIntensity(assay(emolung.se), method="cyclicloess")
design <- model.matrix( ~ 0 + emolung.se$PatID + emolung.se$visitdic)
colnames(design) <- gsub("emolung.se\\$", "", colnames(design))
X <- assay(emolung.se, "cyclil")
blfufit <- lmFit(X, design)
blfufit <- eBayes(blfufit)
singletab <- topTable(blfufit, coef = "visitdicFU", genelist = rowData(emolung.se)[,7], number = nrow(blfufit$coefficients))
myTabl(singletab)
X <- assay(emolung.se, "raw")
dmrs <- bumphunter(X, design, chr=rowData(emolung.se)[,1], pos=rowData(emolung.se)[,2], cutoff=0.2, B=1000, type="Beta", coef=21, nullMethod="bootstrap")
myTabl(dmrs$table)
X <- assay(emolung.se, "raw")
dmrs <- bumphunter(X, design, chr=rowData(emolung.se)[,1], pos=rowData(emolung.se)[,2], cutoff=0.1, B=1000, type="Beta", coef=21, nullMethod="bootstrap")
myTabl(dmrs$table)
rowData(emolung.se)[,2]
rowData(emolung.se)[,1]
design <- model.matrix( ~ 0 + emolung.se$PatID + emolung.se$visitdic)
colnames(design) <- gsub("emolung.se\\$", "", colnames(design))
X <- assay(emolung.se, "cyclil")
blfufit <- lmFit(X, design)
blfufit <- eBayes(blfufit)
singletab <- topTable(blfufit, coef = "visitdicFU", genelist = rowData(emolung.se)[,7], number = nrow(blfufit$coefficients))
myTabl(singletab)
##X <- assay(emolung.se, "")
dmrs <- bumphunter(X, design, chr=rowData(emolung.se)[,1], pos=rowData(emolung.se)[,2], cutoff=0.1, B=1000, type="Beta", coef=21, nullMethod="bootstrap")
##X <- assay(emolung.se, "")
dmrs <- bumphunter(X, design, chr=rowData(emolung.se)[,1], pos=rowData(emolung.se)[,2], cutoff=0.1, B=1000, coef=21, nullMethod="bootstrap")
myTabl(dmrs$table)
##X <- assay(emolung.se, "")
dmrs <- bumphunter(X, design, chr=rowData(emolung.se)[,1], pos=rowData(emolung.se)[,2], cutoff=0.1, smooth=TRUE, coef=21, nullMethod="bootstrap")
myTabl(dmrs$table)
##X <- assay(emolung.se, "")
dmrs <- bumphunter(X, design, chr=rowData(emolung.se)[,1], pos=rowData(emolung.se)[,2], cutoff=0.1, smooth=TRUE, B=1000, coef=21, nullMethod="bootstrap")
myTabl(dmrs$table)
which(rowData(emolung.se)[,1]==5)
which(rowData(emolung.se)[,1]=="chr5")
rowData(emolung.se)[which(rowData(emolung.se)[,1]=="chr5"),]
rowData(emolung.se)[which(rowData(emolung.se)[,1]=="chr5" & rowData(emolung.se)[,2]>130000000),]
data.frame(rowData(emolung.se)[which(rowData(emolung.se)[,1]=="chr5" & rowData(emolung.se)[,2]>130000000),])
data.frame(rowData(emolung.se)[which(rowData(emolung.se)[,1]=="chr5" & rowData(emolung.se)[,2]>140000000),])
data.frame(rowData(emolung.se)[which(rowData(emolung.se)[,1]=="chr5" & rowData(emolung.se)[,2]>140000000) & rowData(emolung.se)[,2]<147000000,])
data.frame(rowData(emolung.se)[which(rowData(emolung.se)[,1]=="chr5" & rowData(emolung.se)[,2]>140000000),])
tail(data.frame(rowData(emolung.se)[which(rowData(emolung.se)[,1]=="chr5" & rowData(emolung.se)[,2]>140000000),]))
data.frame(rowData(emolung.se)[which(rowData(emolung.se)[,1]=="chr5" & rowData(emolung.se)[,2]>140000000 & rowData(emolung.se)[,2]<147000000),])
which(rowData(emolung.se)[,1]=="chr5" & rowData(emolung.se)[,2]>140000000 & rowData(emolung.se)[,2]<147000000)
length(which(rowData(emolung.se)[,1]=="chr5" & rowData(emolung.se)[,2]>140000000 & rowData(emolung.se)[,2]<147000000))
str(dmrs)
dmrs$null
dmrs$null$length
##X <- assay(emolung.se, "")
clusters <- clusterMaker(chr = rowData(emolung.se)[.1], pos = rowData(emolung.se)[,2])
clusterMaker(rowData(emolung.se)[,1], rowData(emolung.se)[,2])
##X <- assay(emolung.se, "")
clusters <- clusterMaker(rowData(emolung.se)[.1], rowData(emolung.se)[,2])
##X <- assay(emolung.se, "")
clusters <- clusterMaker(rowData(emolung.se)[,1], rowData(emolung.se)[,2])
table(clusters)
dmrs <- bumphunter(X, design, chr=rowData(emolung.se)[,1], pos=rowData(emolung.se)[,2], clusters = clusters, cutoff=0.1, smooth=TRUE, B=1000, coef=21, nullMethod="bootstrap")
dmrs <- bumphunter(X, design, clusters = clusters, cutoff=0.1, smooth=TRUE, B=1000, coef=21, nullMethod="bootstrap")
dmrs <- bumphunter(X, design, chr=rowData(emolung.se)[,1], pos=rowData(emolung.se)[,2], cluster = clusters, cutoff=0.1, smooth=TRUE, B=1000, coef=21, nullMethod="bootstrap")
myTabl(dmrs$table)
table(clusters)
clusters
clusters==192
rowData(emolung.se)[clusters==192,]
design <- model.matrix( ~ 0 + emolung.se$PatID + emolung.se$visitdic)
colnames(design) <- gsub("emolung.se\\$", "", colnames(design))
X <- assay(emolung.se, "cyclil")
blfufit <- lmFit(X, design)
blfufit <- eBayes(blfufit)
singletab <- topTable(blfufit, coef = "visitdicFU", genelist = rowData(emolung.se)[,7], number = nrow(blfufit$coefficients))
myTabl(singletab)
package.version("bumphunter")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = this.path::this.dir())
knitr::include_graphics("../img/cpgsitelocation.png")
knitr::include_graphics("../img/cpgsitelocation.png")
q()
update.packages("extraSuperpower")
devtools::install_github("luisrmacias/extraSuperpower")
install.packages("fGarch")
install.packages("lmp")
?extraSuperpower
library(lmPerm)
library(Rfit)
library(ez)
library(nparLD)
??lmp
setwd("repos/r_packages/extraSuperpower/")
remove.packages('lmPerm')
install.packages('lmPerm')
install.packages('lmPerm')
update.packages("extraSuperpower")
devtools::update_packages("extraSuperpower")
getwd()
devtools::document()
devtools::update_packages("extraSuperpower")
getwd()
setwd("..")
devtools::document()
setwd("extraSuperpower")
devtools::document()
devtools::document()
devtools::document()
devtools::update_packages("extraSuperpower")
devtools::install_github("extraSuperpower")
devtools::install_github("luisrmacias/extraSuperpower")
devtools::install_github("luisrmacias/extraSuperpower")
q()
