Blevs <- 3
fAeff <- 1.5
fBeff <- 0.8
## if you do not provide a list with names of factors and levels, factor names are to "fA" and "fB" and level names are set to 'letters[1:nlfA]' and 'letters[1:nlfB]'.
Alevelnames <- c("control", "intervention")
Blevelnames <- 1:Blevs
nameslist <- list("Group" = Alevelnames, "Time" = Blevelnames)
simple_twoway <- calculate_mean_matrix(refmean = refmean, nlfA = Alevs, nlfB = Blevs,
fAeffect = fAeff, fBeffect = fBeff,
label_list = nameslist)
##labelling factors and their levels is convenient
simple_twoway
simple_twoway_sdadjusted <- calculate_mean_matrix(refmean = refmean, nlfA = Alevs, nlfB = Blevs,
fAeffect = fAeff, fBeffect = fBeff,
sdproportional = FALSE, sdratio = 0.1,
label_list = nameslist)
simple_twoway_sdadjusted
#intervention group is the second row in the means matrix, times 2 and 3 the 2nd and 3rd columns.
cellsinteraction <- c(2, 2, 2, 3)
cellsinteraction <- matrix(cellsinteraction, 2, 2)
interaction_twoway <- calculate_mean_matrix(refmean = refmean, nlfA = Alevs, nlfB = Blevs,
fAeffect = fAeff, fBeffect = fBeff,
groupswinteraction = cellsinteraction, interact = 0.7,
label_list = nameslist)
interaction_twoway
#Let's suppose within subject correlation is 0.7
rho <- 0.7
interaction_twoway_timewithin <- calculate_mean_matrix(refmean = refmean, nlfA = Alevs, nlfB = Blevs,
fAeffect = fAeff, fBeffect = fBeff,
groupswinteraction = cellsinteraction, interact = 0.7,
rho = rho, withinf = "fB",
label_list = nameslist)
interaction_twoway_timewithin
set.seed(170824)
n <- seq(3, 12, 3)
indepmeasures_normal_sim <- simulate_twoway_nrange(matrices_obj = interaction_twoway,
nrange = n, distribution = "normal")
length(indepmeasures_normal_sim)
length(n)
indepmeasures_skewed_sim <- simulate_twoway_nrange(matrices_obj = interaction_twoway,
nrange = n, distribution = "skewed", skewness = 2)
repmeasures_normal_sim <- simulate_twoway_nrange(matrices_obj = interaction_twoway_timewithin,
nrange = n, repeated_measurements = TRUE)
repmeasures_skewed_sim <- simulate_twoway_nrange(matrices_obj = interaction_twoway_timewithin,
nrange = n, repeated_measurements = TRUE,
distribution = "skewed", skewness = 0.2)
test_power_overkn(indepmeasures_normal_sim)
test_power_overkn(indepmeasures_skewed_sim)
test_power_overkn(indepmeasures_skewed_sim, test = "rank")
test_power_overkn(repmeasures_normal_sim, test = "rank")
ls()
interaction_twoway_timewithin
test_power_overkn(repmeasures_skewed_sim)
(.packages())
devtools::document()
devtools::check()
install.packages("testthat")
usethis::use_testthat(3)
library(testthat)
library(extraSuperpower)
test_check("extraSuperpower")
getwd()
test_check("extraSuperpower")
test_check()
test_check("extraSuperpower")
devtools::check()
q()
(.packages())
devtools::document()
devtools::check()
.Last.error
(.packages())
detach("package:extraSuperpower", unload = TRUE)
devtools::check()
detach("package:extraSuperpower", unload = TRUE)
(.packages())
devtools::check()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(extraSuperpower)
## install the dependencies
cran.dep <- c("stringr",
"ggplot2",
"reshape2",
"scales",
"Matrix",
"ggpubr",
"ggthemes",
"fGarch",
"truncnorm",
"MASS",
"sn",
"tmvtnorm",
"afex",
"Rfit",
"lmPerm",
"nparLD",
"ez")
cran.dep.to.install <- setdiff(cran.dep,
installed.packages()[, "Package"])
if(length(cran.dep.to.install) > 0) {
install.packages(cran.dep.to.install)
}
if(!"extraSuperpower" %in% installed.packages()[, "Package"])
{
devtools::install_github("luisrmacias/extraSuperpower")
}
## outcome mean in reference group at baseline is 10
## a control group and an intervention group will be compared over 3 timepoints
## all measurements are independent
refmean <- 10
Alevs <- 2
Blevs <- 3
fAeff <- 1.5
fBeff <- 0.8
## if you do not provide a list with names of factors and levels, factor names are to "fA" and "fB" and level names are set to 'letters[1:nlfA]' and 'letters[1:nlfB]'.
Alevelnames <- c("control", "intervention")
Blevelnames <- 1:Blevs
nameslist <- list("Group" = Alevelnames, "Time" = Blevelnames)
simple_twoway <- calculate_mean_matrix(refmean = refmean, nlfA = Alevs, nlfB = Blevs,
fAeffect = fAeff, fBeffect = fBeff,
label_list = nameslist)
##labelling factors and their levels is convenient
simple_twoway
simple_twoway_sdadjusted <- calculate_mean_matrix(refmean = refmean, nlfA = Alevs, nlfB = Blevs,
fAeffect = fAeff, fBeffect = fBeff,
sdproportional = FALSE, sdratio = 0.1,
label_list = nameslist)
simple_twoway_sdadjusted
#intervention group is the second row in the means matrix, times 2 and 3 the 2nd and 3rd columns.
cellsinteraction <- c(2, 2, 2, 3)
cellsinteraction <- matrix(cellsinteraction, 2, 2)
interaction_twoway <- calculate_mean_matrix(refmean = refmean, nlfA = Alevs, nlfB = Blevs,
fAeffect = fAeff, fBeffect = fBeff,
groupswinteraction = cellsinteraction, interact = 0.7,
label_list = nameslist)
interaction_twoway
#Let's suppose within subject correlation is 0.7
rho <- 0.7
interaction_twoway_timewithin <- calculate_mean_matrix(refmean = refmean, nlfA = Alevs, nlfB = Blevs,
fAeffect = fAeff, fBeffect = fBeff,
groupswinteraction = cellsinteraction, interact = 0.7,
rho = rho, withinf = "fB",
label_list = nameslist)
interaction_twoway_timewithin
set.seed(170824)
n <- seq(3, 12, 3)
indepmeasures_normal_sim <- simulate_twoway_nrange(matrices_obj = interaction_twoway,
nrange = n, distribution = "normal")
length(indepmeasures_normal_sim)
length(n)
indepmeasures_skewed_sim <- simulate_twoway_nrange(matrices_obj = interaction_twoway,
nrange = n, distribution = "skewed", skewness = 2)
repmeasures_normal_sim <- simulate_twoway_nrange(matrices_obj = interaction_twoway_timewithin,
nrange = n, repeated_measurements = TRUE)
repmeasures_skewed_sim <- simulate_twoway_nrange(matrices_obj = interaction_twoway_timewithin,
nrange = n, repeated_measurements = TRUE,
distribution = "skewed", skewness = 0.2)
test_power_overkn(indepmeasures_normal_sim)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(extraSuperpower)
## install the dependencies
cran.dep <- c("stringr",
"ggplot2",
"reshape2",
"scales",
"Matrix",
"ggpubr",
"ggthemes",
"fGarch",
"truncnorm",
"MASS",
"sn",
"tmvtnorm",
"afex",
"Rfit",
"lmPerm",
"nparLD",
"ez")
cran.dep.to.install <- setdiff(cran.dep,
installed.packages()[, "Package"])
if(length(cran.dep.to.install) > 0) {
install.packages(cran.dep.to.install)
}
if(!"extraSuperpower" %in% installed.packages()[, "Package"])
{
devtools::install_github("luisrmacias/extraSuperpower")
}
## outcome mean in reference group at baseline is 10
## a control group and an intervention group will be compared over 3 timepoints
## all measurements are independent
refmean <- 10
Alevs <- 2
Blevs <- 3
fAeff <- 1.5
fBeff <- 0.8
## if you do not provide a list with names of factors and levels, factor names are to "fA" and "fB" and level names are set to 'letters[1:nlfA]' and 'letters[1:nlfB]'.
Alevelnames <- c("control", "intervention")
Blevelnames <- 1:Blevs
nameslist <- list("Group" = Alevelnames, "Time" = Blevelnames)
simple_twoway <- calculate_mean_matrix(refmean = refmean, nlfA = Alevs, nlfB = Blevs,
fAeffect = fAeff, fBeffect = fBeff,
label_list = nameslist)
##labelling factors and their levels is convenient
simple_twoway
simple_twoway_sdadjusted <- calculate_mean_matrix(refmean = refmean, nlfA = Alevs, nlfB = Blevs,
fAeffect = fAeff, fBeffect = fBeff,
sdproportional = FALSE, sdratio = 0.1,
label_list = nameslist)
simple_twoway_sdadjusted
#intervention group is the second row in the means matrix, times 2 and 3 the 2nd and 3rd columns.
cellsinteraction <- c(2, 2, 2, 3)
cellsinteraction <- matrix(cellsinteraction, 2, 2)
interaction_twoway <- calculate_mean_matrix(refmean = refmean, nlfA = Alevs, nlfB = Blevs,
fAeffect = fAeff, fBeffect = fBeff,
groupswinteraction = cellsinteraction, interact = 0.7,
label_list = nameslist)
interaction_twoway
#Let's suppose within subject correlation is 0.7
rho <- 0.7
interaction_twoway_timewithin <- calculate_mean_matrix(refmean = refmean, nlfA = Alevs, nlfB = Blevs,
fAeffect = fAeff, fBeffect = fBeff,
groupswinteraction = cellsinteraction, interact = 0.7,
rho = rho, withinf = "fB",
label_list = nameslist)
interaction_twoway_timewithin
set.seed(170824)
n <- seq(3, 12, 3)
indepmeasures_normal_sim <- simulate_twoway_nrange(matrices_obj = interaction_twoway,
nrange = n, distribution = "normal")
length(indepmeasures_normal_sim)
length(n)
indepmeasures_skewed_sim <- simulate_twoway_nrange(matrices_obj = interaction_twoway,
nrange = n, distribution = "skewed", skewness = 2)
repmeasures_normal_sim <- simulate_twoway_nrange(matrices_obj = interaction_twoway_timewithin,
nrange = n, repeated_measurements = TRUE)
repmeasures_skewed_sim <- simulate_twoway_nrange(matrices_obj = interaction_twoway_timewithin,
nrange = n, repeated_measurements = TRUE,
distribution = "skewed", skewness = 0.2)
test_power_overkn(indepmeasures_normal_sim)
test_power_overkn(indepmeasures_skewed_sim)
(.packages())
devtools::document()
devtools::check()
devtools::install_github("luisrmacias/extraSuperpower")
(.packages())
devtools::check()
(.packages())
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(extraSuperpower)
## install the dependencies
cran.dep <- c("stringr",
"ggplot2",
"reshape2",
"scales",
"Matrix",
"ggpubr",
"ggthemes",
"fGarch",
"truncnorm",
"MASS",
"sn",
"tmvtnorm",
"afex",
"Rfit",
"lmPerm",
"nparLD",
"ez")
cran.dep.to.install <- setdiff(cran.dep,
installed.packages()[, "Package"])
if(length(cran.dep.to.install) > 0) {
install.packages(cran.dep.to.install)
}
if(!"extraSuperpower" %in% installed.packages()[, "Package"])
{
devtools::install_github("luisrmacias/extraSuperpower")
}
## outcome mean in reference group at baseline is 10
## a control group and an intervention group will be compared over 3 timepoints
## all measurements are independent
refmean <- 10
Alevs <- 2
Blevs <- 3
fAeff <- 1.5
fBeff <- 0.8
## if you do not provide a list with names of factors and levels, factor names are to "fA" and "fB" and level names are set to 'letters[1:nlfA]' and 'letters[1:nlfB]'.
Alevelnames <- c("control", "intervention")
Blevelnames <- 1:Blevs
nameslist <- list("Group" = Alevelnames, "Time" = Blevelnames)
simple_twoway <- calculate_mean_matrix(refmean = refmean, nlfA = Alevs, nlfB = Blevs,
fAeffect = fAeff, fBeffect = fBeff,
label_list = nameslist)
##labelling factors and their levels is convenient
simple_twoway
simple_twoway_sdadjusted <- calculate_mean_matrix(refmean = refmean, nlfA = Alevs, nlfB = Blevs,
fAeffect = fAeff, fBeffect = fBeff,
sdproportional = FALSE, sdratio = 0.1,
label_list = nameslist)
simple_twoway_sdadjusted
#intervention group is the second row in the means matrix, times 2 and 3 the 2nd and 3rd columns.
cellsinteraction <- c(2, 2, 2, 3)
cellsinteraction <- matrix(cellsinteraction, 2, 2)
interaction_twoway <- calculate_mean_matrix(refmean = refmean, nlfA = Alevs, nlfB = Blevs,
fAeffect = fAeff, fBeffect = fBeff,
groupswinteraction = cellsinteraction, interact = 0.7,
label_list = nameslist)
interaction_twoway
#Let's suppose within subject correlation is 0.7
rho <- 0.7
interaction_twoway_timewithin <- calculate_mean_matrix(refmean = refmean, nlfA = Alevs, nlfB = Blevs,
fAeffect = fAeff, fBeffect = fBeff,
groupswinteraction = cellsinteraction, interact = 0.7,
rho = rho, withinf = "fB",
label_list = nameslist)
interaction_twoway_timewithin
set.seed(170824)
n <- seq(3, 12, 3)
indepmeasures_normal_sim <- simulate_twoway_nrange(matrices_obj = interaction_twoway,
nrange = n, distribution = "normal")
length(indepmeasures_normal_sim)
length(n)
indepmeasures_skewed_sim <- simulate_twoway_nrange(matrices_obj = interaction_twoway,
nrange = n, distribution = "skewed", skewness = 2)
repmeasures_normal_sim <- simulate_twoway_nrange(matrices_obj = interaction_twoway_timewithin,
nrange = n, repeated_measurements = TRUE)
repmeasures_skewed_sim <- simulate_twoway_nrange(matrices_obj = interaction_twoway_timewithin,
nrange = n, repeated_measurements = TRUE,
distribution = "skewed", skewness = 0.2)
test_power_overkn(indepmeasures_normal_sim)
plot_powercurves
(.packages())
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(extraSuperpower)
## install the dependencies
cran.dep <- c("stringr",
"ggplot2",
"reshape2",
"scales",
"Matrix",
"ggpubr",
"ggthemes",
"fGarch",
"truncnorm",
"MASS",
"sn",
"tmvtnorm",
"afex",
"Rfit",
"lmPerm",
"nparLD",
"ez")
cran.dep.to.install <- setdiff(cran.dep,
installed.packages()[, "Package"])
if(length(cran.dep.to.install) > 0) {
install.packages(cran.dep.to.install)
}
if(!"extraSuperpower" %in% installed.packages()[, "Package"])
{
devtools::install_github("luisrmacias/extraSuperpower")
}
## outcome mean in reference group at baseline is 10
## a control group and an intervention group will be compared over 3 timepoints
## all measurements are independent
refmean <- 10
Alevs <- 2
Blevs <- 3
fAeff <- 1.5
fBeff <- 0.8
## if you do not provide a list with names of factors and levels, factor names are to "fA" and "fB" and level names are set to 'letters[1:nlfA]' and 'letters[1:nlfB]'.
Alevelnames <- c("control", "intervention")
Blevelnames <- 1:Blevs
nameslist <- list("Group" = Alevelnames, "Time" = Blevelnames)
simple_twoway <- calculate_mean_matrix(refmean = refmean, nlfA = Alevs, nlfB = Blevs,
fAeffect = fAeff, fBeffect = fBeff,
label_list = nameslist)
##labelling factors and their levels is convenient
simple_twoway
simple_twoway_sdadjusted <- calculate_mean_matrix(refmean = refmean, nlfA = Alevs, nlfB = Blevs,
fAeffect = fAeff, fBeffect = fBeff,
sdproportional = FALSE, sdratio = 0.1,
label_list = nameslist)
simple_twoway_sdadjusted
#intervention group is the second row in the means matrix, times 2 and 3 the 2nd and 3rd columns.
cellsinteraction <- c(2, 2, 2, 3)
cellsinteraction <- matrix(cellsinteraction, 2, 2)
interaction_twoway <- calculate_mean_matrix(refmean = refmean, nlfA = Alevs, nlfB = Blevs,
fAeffect = fAeff, fBeffect = fBeff,
groupswinteraction = cellsinteraction, interact = 0.7,
label_list = nameslist)
interaction_twoway
#Let's suppose within subject correlation is 0.7
rho <- 0.7
interaction_twoway_timewithin <- calculate_mean_matrix(refmean = refmean, nlfA = Alevs, nlfB = Blevs,
fAeffect = fAeff, fBeffect = fBeff,
groupswinteraction = cellsinteraction, interact = 0.7,
rho = rho, withinf = "fB",
label_list = nameslist)
interaction_twoway_timewithin
set.seed(170824)
n <- seq(3, 12, 3)
indepmeasures_normal_sim <- simulate_twoway_nrange(matrices_obj = interaction_twoway,
nrange = n, distribution = "normal")
length(indepmeasures_normal_sim)
length(n)
indepmeasures_skewed_sim <- simulate_twoway_nrange(matrices_obj = interaction_twoway,
nrange = n, distribution = "skewed", skewness = 2)
repmeasures_normal_sim <- simulate_twoway_nrange(matrices_obj = interaction_twoway_timewithin,
nrange = n, repeated_measurements = TRUE)
repmeasures_skewed_sim <- simulate_twoway_nrange(matrices_obj = interaction_twoway_timewithin,
nrange = n, repeated_measurements = TRUE,
distribution = "skewed", skewness = 0.2)
test_power_overkn(indepmeasures_normal_sim)
detach("package:extraSuperpower", unload = TRUE)
devtools::install_github("luisrmacias/extraSuperpower")
detach("package:extraSuperpower", unload = TRUE)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(extraSuperpower)
## install the dependencies
cran.dep <- c("stringr",
"ggplot2",
"reshape2",
"scales",
"Matrix",
"ggpubr",
"ggthemes",
"fGarch",
"truncnorm",
"MASS",
"sn",
"tmvtnorm",
"afex",
"Rfit",
"lmPerm",
"nparLD",
"ez")
cran.dep.to.install <- setdiff(cran.dep,
installed.packages()[, "Package"])
if(length(cran.dep.to.install) > 0) {
install.packages(cran.dep.to.install)
}
if(!"extraSuperpower" %in% installed.packages()[, "Package"])
{
devtools::install_github("luisrmacias/extraSuperpower")
}
## outcome mean in reference group at baseline is 10
## a control group and an intervention group will be compared over 3 timepoints
## all measurements are independent
refmean <- 10
Alevs <- 2
Blevs <- 3
fAeff <- 1.5
fBeff <- 0.8
## if you do not provide a list with names of factors and levels, factor names are to "fA" and "fB" and level names are set to 'letters[1:nlfA]' and 'letters[1:nlfB]'.
Alevelnames <- c("control", "intervention")
Blevelnames <- 1:Blevs
nameslist <- list("Group" = Alevelnames, "Time" = Blevelnames)
simple_twoway <- calculate_mean_matrix(refmean = refmean, nlfA = Alevs, nlfB = Blevs,
fAeffect = fAeff, fBeffect = fBeff,
label_list = nameslist)
##labelling factors and their levels is convenient
simple_twoway
simple_twoway_sdadjusted <- calculate_mean_matrix(refmean = refmean, nlfA = Alevs, nlfB = Blevs,
fAeffect = fAeff, fBeffect = fBeff,
sdproportional = FALSE, sdratio = 0.1,
label_list = nameslist)
simple_twoway_sdadjusted
#intervention group is the second row in the means matrix, times 2 and 3 the 2nd and 3rd columns.
cellsinteraction <- c(2, 2, 2, 3)
cellsinteraction <- matrix(cellsinteraction, 2, 2)
interaction_twoway <- calculate_mean_matrix(refmean = refmean, nlfA = Alevs, nlfB = Blevs,
fAeffect = fAeff, fBeffect = fBeff,
groupswinteraction = cellsinteraction, interact = 0.7,
label_list = nameslist)
interaction_twoway
#Let's suppose within subject correlation is 0.7
rho <- 0.7
interaction_twoway_timewithin <- calculate_mean_matrix(refmean = refmean, nlfA = Alevs, nlfB = Blevs,
fAeffect = fAeff, fBeffect = fBeff,
groupswinteraction = cellsinteraction, interact = 0.7,
rho = rho, withinf = "fB",
label_list = nameslist)
interaction_twoway_timewithin
set.seed(170824)
n <- seq(3, 12, 3)
indepmeasures_normal_sim <- simulate_twoway_nrange(matrices_obj = interaction_twoway,
nrange = n, distribution = "normal")
length(indepmeasures_normal_sim)
length(n)
indepmeasures_skewed_sim <- simulate_twoway_nrange(matrices_obj = interaction_twoway,
nrange = n, distribution = "skewed", skewness = 2)
repmeasures_normal_sim <- simulate_twoway_nrange(matrices_obj = interaction_twoway_timewithin,
nrange = n, repeated_measurements = TRUE)
repmeasures_skewed_sim <- simulate_twoway_nrange(matrices_obj = interaction_twoway_timewithin,
nrange = n, repeated_measurements = TRUE,
distribution = "skewed", skewness = 0.2)
test_power_overkn(indepmeasures_normal_sim)
devtools::check()
q()
